// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model Item {
  id           String   @id @default(uuid()) @db.Uuid
  name         String   @unique
  description  String
  price        Decimal
  otherDetails String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  orderItems     OrderItem[]
  aggregateStock AggregatedStock?
  CartItems      CartItem[]
}

model Cart {
  id         String   @id @default(uuid()) @db.Uuid
  customerId String   @unique @db.Uuid
  createdAt  DateTime @default(now())

  items CartItem[]
}

model CartItem {
  id        String   @id @default(uuid()) @db.Uuid
  itemId    String   @db.Uuid
  cartId    String   @db.Uuid
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  item Item @relation(fields: [itemId], references: [id])
  cart Cart @relation(fields: [cartId], references: [id])

  @@unique(fields: [itemId, cartId], name: "cartItemUnique")
}

model AggregatedStock {
  id     String @id @default(uuid()) @db.Uuid
  itemId String @unique @db.Uuid
  stock  Int

  item Item @relation(fields: [itemId], references: [id])
}

model Order {
  id         String      @id @default(uuid()) @db.Uuid
  customerId String      @db.Uuid
  status     OrderStatus
  phone      String
  price      Decimal
  address1   String
  address2   String      @default("")
  city       String
  state      String
  zip        String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  items OrderItem[]
}

model OrderItem {
  id       String @id @default(uuid()) @db.Uuid
  orderId  String @db.Uuid
  itemId   String @db.Uuid
  quantity Int

  order Order @relation(fields: [orderId], references: [id])
  item  Item  @relation(fields: [itemId], references: [id])
}

enum OrderStatus {
  SHIPPED
  CREATED
  SUBMITTED
  COMPLETED
  CANCELLED
}
